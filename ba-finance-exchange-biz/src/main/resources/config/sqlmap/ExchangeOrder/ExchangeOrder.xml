<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ExchangeOrder">

    <typeAlias alias="ExchangeOrder" type="com.dianping.ba.finance.exchange.api.datas.ExchangeOrderData"/>
    <resultMap id="exchangeOrder" class="ExchangeOrder">
        <result property="exchangeOrderId" column="ExchangeOrderID"/>
        <result property="orderAmount" column="OrderAmount"/>
        <result property="orderType" column="OrderType"/>
        <result property="bankAccountNo" column="BankAccountNo"/>
        <result property="bankAccountName" column="BankAccountName"/>
        <result property="bankName" column="BankName"/>
        <result property="bankProvince" column="BankProvince"/>
        <result property="bankCity" column="BankCity"/>
        <result property="status" column="Status"/>
        <result property="addDate" column="AddDate"/>
        <result property="orderDate" column="OrderDate"/>
        <result property="lastUpdateDate" column="LastUpdateDate"/>
        <result property="memo" column="Memo"/>
        <result property="bizCode" column="BizCode"/>
        <result property="addLoginId" column="AddLoginID"/>
        <result property="lastUpdateLoginId" column="LastUpdateLoginID"/>
    </resultMap>

    <typeAlias alias="ExchangeOrderDisplayData" type="com.dianping.ba.finance.exchange.api.datas.ExchangeOrderDisplayData"/>
    <resultMap id="exchangeOrderDisplayData" class="ExchangeOrderDisplayData">
        <result property="exchangeOrderId" column="ExchangeOrderID"/>
        <result property="customerGlobalId" column="CustomerGlobalID"/>
        <result property="companyGlobalId" column="CompanyGlobalID"/>
        <result property="shopId" column="ShopID"/>
        <result property="orderAmount" column="OrderAmount"/>
        <result property="bankAccountNo" column="BankAccountNo"/>
        <result property="bankAccountName" column="BankAccountName"/>
        <result property="bankName" column="BankName"/>
        <result property="bankProvince" column="BankProvince"/>
        <result property="bankCity" column="BankCity"/>
        <result property="status" column="Status"/>
        <result property="memo" column="Memo"/>
        <result property="addDate" column="AddDate"/>
        <result property="orderDate" column="OrderDate"/>
        <result property="bizCode" column="BizCode"/>
        <result property="lastUpdateDate" column="LastUpdateDate"/>
    </resultMap>

    <typeAlias alias="EOAndFlowIdSummaryData" type="com.dianping.ba.finance.exchange.api.datas.EOAndFlowIdSummaryData"/>
    <resultMap id="eoAndFlowIdSummaryData" class="EOAndFlowIdSummaryData">
        <result property="bizCode" column="BizCode"/>
        <result property="orderAmount" column="OrderAmount"/>
        <result property="status" column="Status"/>
        <result property="addDate" column="AddDate"/>
        <result property="flowId" column="FlowId"/>
    </resultMap>

    <typeAlias alias="ExchangeOrderSummaryData" type="com.dianping.ba.finance.exchange.api.datas.ExchangeOrderSummaryData"/>
    <resultMap id="exchangeOrderSummaryData" class="ExchangeOrderSummaryData">
        <result property="orderAmount" column="OrderAmount"/>
        <result property="status" column="Status"/>
        <result property="addDate" column="AddDate"/>
        <result property="bizCode" column="BizCode"/>
    </resultMap>

    <insert id="insertExchangeOrder" parameterClass="map">
        <![CDATA[
        	 insert into FS_ExchangeOrder
		            (OrderAmount,
		             OrderType,
		             BankAccountNo,
		             BankAccountName,
		             BankName,
		             BankProvince,
                     BankCity,
		             AddDate,
		             LastUpdateDate,
		             Memo,
		             BizCode,
		             AddLoginID
		             )
			values (#exchangeOrderData.orderAmount#,
			         #exchangeOrderData.orderType#,
			         #exchangeOrderData.bankAccountNo#,
			         #exchangeOrderData.bankAccountName#,
			         #exchangeOrderData.bankName#,
			         #exchangeOrderData.bankProvince#,
			         #exchangeOrderData.bankCity#,
			         NOW(),
			         NOW(),
			         #exchangeOrderData.memo#,
			         #exchangeOrderData.bizCode#,
			         #exchangeOrderData.addLoginId#
			        );
 		]]>
        <selectKey resultClass="java.lang.Integer" keyProperty="exchangeOrderId">
            <![CDATA[
			SELECT @@IDENTITY AS id
		]]>
        </selectKey>
    </insert>

    <update id="updateExchangeOrderData" parameterClass="map">
        UPDATE FS_ExchangeOrder
        SET Status = #postStatus#,
        LastUpdateLoginID = #loginId#,
        OrderDate = #orderDate#,
        LastUpdateDate = now()
        WHERE ExchangeOrderID = #exchangeOrderId# AND Status = #preStatus#
    </update>

    <update id="updateExchangeOrderToRefund" parameterClass="hashMap">
        UPDATE FS_ExchangeOrder
        SET LastUpdateLoginID = #loginId#,
        Status = #setStatus#,
        Memo = #refundDTO.refundReason#,
        LastUpdateDate = #todayDate#
        WHERE BizCode = #refundDTO.refundId#
        AND Status = #preStatus#
    </update>

    <select id="loadExchangeOrderByOrderId" parameterClass="map" resultMap="exchangeOrder">
        <![CDATA[
        select ExchangeOrderID,OrderAmount,OrderType,BankAccountNo,BankAccountName,BankName,BankProvince,
                     BankCity,Status,OrderDate,AddDate,LastUpdateDate,Memo,BizCode,AddLoginID,LastUpdateLoginID
        from FS_ExchangeOrder
        where ExchangeOrderID = #exchangeOrderId#
        ]]>
    </select>

    <select id="paginateExchangeOrderList" resultMap="exchangeOrderDisplayData" parameterClass="map">
        SELECT
        eo.ExchangeOrderID,
        sa.CustomerGlobalID,
        sa.CompanyGlobalID,
        IFNULL(sa.ShopID, 0) AS ShopID,
        eo.OrderAmount,
        eo.BankAccountNo,
        eo.BankAccountName,
        eo.BankName,
        eo.BankProvince,
        eo.BankCity,
        eo. STATUS,
        eo.Memo,
        eo.AddDate,
        eo.OrderDate,
        eo.BizCode,
        eo.LastUpdateDate
        FROM
        FS_ExchangeOrder eo
        LEFT JOIN FS_ShopFundAccountFlow flow ON (
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FlowType = 1
        AND flow.SourceType = 1
        )
        LEFT JOIN FS_ShopFundAccount sa ON flow.FAID = sa.FAID
        <dynamic prepend="WHERE">
            <isNotEmpty property="searchBean.bizCode" prepend="and">
                eo.BizCode = #searchBean.bizCode#
            </isNotEmpty>
            <isNotNull property="searchBean.beginDate" prepend="and">
                eo.AddDate &gt;= #searchBean.beginDate#
            </isNotNull>
            <isNotNull property="searchBean.endDate" prepend="and">
                eo.AddDate &lt;= #searchBean.endDate#
            </isNotNull>
            <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
                eo.Status = #searchBean.status#
            </isGreaterThan>
            <isGreaterThan property="searchBean.orderType" compareValue="0" prepend="and">
                eo.OrderType = #searchBean.orderType#
            </isGreaterThan>
        </dynamic>
        ORDER BY
        eo.AddDate DESC,
        eo.ExchangeOrderID ASC
    </select>

    <select id="paginateExchangeOrderList_COUNT" resultClass="int" parameterClass="map">
        SELECT
        COUNT(1)
        FROM
        FS_ExchangeOrder eo
        LEFT JOIN FS_ShopFundAccountFlow flow ON (
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FlowType = 1
        AND flow.SourceType = 1
        )
        LEFT JOIN FS_ShopFundAccount sa ON flow.FAID = sa.FAID
        <dynamic prepend="WHERE">
            <isNotEmpty property="searchBean.bizCode" prepend="and">
                eo.BizCode = #searchBean.bizCode#
            </isNotEmpty>
            <isNotNull property="searchBean.beginDate" prepend="and">
                eo.AddDate &gt;= #searchBean.beginDate#
            </isNotNull>
            <isNotNull property="searchBean.endDate" prepend="and">
                eo.AddDate &lt;= #searchBean.endDate#
            </isNotNull>
            <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
                eo.Status = #searchBean.status#
            </isGreaterThan>
            <isGreaterThan property="searchBean.orderType" compareValue="0" prepend="and">
                eo.OrderType = #searchBean.orderType#
            </isGreaterThan>
        </dynamic>
        ORDER BY
        eo.AddDate DESC,
        eo.ExchangeOrderID ASC
    </select>


    <select id="findExchangeOrderTotalAmount" resultClass="java.math.BigDecimal" parameterClass="map">
        SELECT
        IFNULL(SUM(eo.OrderAmount), 0) AS totalAmount
        FROM
        FS_ExchangeOrder eo
        <dynamic prepend="WHERE">
            <isNotEmpty property="searchBean.bizCode" prepend="and">
                eo.BizCode = #searchBean.bizCode#
            </isNotEmpty>
            <isNotNull property="searchBean.beginDate" prepend="and">
                eo.AddDate &gt;= #searchBean.beginDate#
            </isNotNull>
            <isNotNull property="searchBean.endDate" prepend="and">
                eo.AddDate &lt;= #searchBean.endDate#
            </isNotNull>
            <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
                eo.Status = #searchBean.status#
            </isGreaterThan>
            <isGreaterThan property="searchBean.orderType" compareValue="0" prepend="and">
                eo.OrderType = #searchBean.orderType#
            </isGreaterThan>
        </dynamic>
    </select>

    <select id="findExchangeOrderByBizCode" resultMap="exchangeOrder" parameterClass="map">
        SELECT ExchangeOrderID,OrderAmount,OrderType,BankAccountNo,BankAccountName,BankName,BankProvince,
        BankCity,Status,AddDate,OrderDate,LastUpdateDate,Memo,BizCode,AddLoginID,LastUpdateLoginID
        FROM FS_ExchangeOrder
        WHERE BizCode IN
        <iterate open="(" close=")" conjunction="," property="bizCodeList">
            #bizCodeList[]#
        </iterate>
    </select>

    <select id="findExchangeOrderList" resultMap="exchangeOrderDisplayData" parameterClass="map">
        SELECT
        eo.ExchangeOrderID,
        sa.CustomerGlobalID,
        sa.CompanyGlobalID,
        IFNULL(sa.ShopID, 0) AS ShopID,
        eo.OrderAmount,
        eo.BankAccountNo,
        eo.BankAccountName,
        eo.BankName,
        eo.BankProvince,
        eo.BankCity,
        eo. STATUS,
        eo.Memo,
        eo.AddDate,
        eo.OrderDate,
        eo.BizCode,
        eo.LastUpdateDate
        FROM
        FS_ExchangeOrder eo
        LEFT JOIN FS_ShopFundAccountFlow flow ON (
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FlowType = 1
        AND flow.SourceType = 1
        )
        LEFT JOIN FS_ShopFundAccount sa ON flow.FAID = sa.FAID
        <dynamic prepend="WHERE">
            <isNotEmpty property="searchBean.bizCode" prepend="and">
                eo.BizCode = #searchBean.bizCode#
            </isNotEmpty>
            <isNotNull property="searchBean.beginDate" prepend="and">
                eo.AddDate &gt;= #searchBean.beginDate#
            </isNotNull>
            <isNotNull property="searchBean.endDate" prepend="and">
                eo.AddDate &lt;= #searchBean.endDate#
            </isNotNull>
            <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
                eo.Status = #searchBean.status#
            </isGreaterThan>
            <isGreaterThan property="searchBean.orderType" compareValue="0" prepend="and">
                eo.OrderType = #searchBean.orderType#
            </isGreaterThan>
        </dynamic>
        ORDER BY
        eo.AddDate DESC,
        eo.ExchangeOrderID ASC
    </select>

    <select id="findExchangeOrderIdList" resultClass="Integer" parameterClass="map">
        SELECT
        eo.ExchangeOrderID
        FROM
        FS_ExchangeOrder eo
        LEFT JOIN FS_ShopFundAccountFlow flow ON (
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FlowType = 1
        AND flow.SourceType = 1
        )
        LEFT JOIN FS_ShopFundAccount sa ON flow.FAID = sa.FAID
        <dynamic prepend="WHERE">
            <isNotEmpty property="searchBean.bizCode" prepend="and">
                eo.BizCode = #searchBean.bizCode#
            </isNotEmpty>
            <isNotNull property="searchBean.beginDate" prepend="and">
                eo.AddDate &gt;= #searchBean.beginDate#
            </isNotNull>
            <isNotNull property="searchBean.endDate" prepend="and">
                eo.AddDate &lt;= #searchBean.endDate#
            </isNotNull>
            <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
                eo.Status = #searchBean.status#
            </isGreaterThan>
            <isGreaterThan property="searchBean.orderType" compareValue="0" prepend="and">
                eo.OrderType = #searchBean.orderType#
            </isGreaterThan>
        </dynamic>
        ORDER BY
        eo.AddDate DESC,
        eo.ExchangeOrderID ASC
    </select>

    <update id="updateExchangeOrderToPending" parameterClass="map">
        UPDATE FS_ExchangeOrder
        SET Status = #setStatus#,
        LastUpdateDate = now(),
        LastUpdateLoginID = #loginId#
        WHERE Status = #whereStatus#
        <isNotEmpty prepend="and" property="orderIds">
            ExchangeOrderID IN
            <iterate open="(" close=")" conjunction="," property="orderIds">
                #orderIds[]#
            </iterate>
        </isNotEmpty>
    </update>

    <select id="loadExchangeOrderAndPositiveFlow" resultMap="eoAndFlowIdSummaryData" parameterClass="map">
        SELECT
               eo.BizCode,
               eo.OrderAmount,
               eo.Status,
               eo.AddDate,
               IFNULL(flow.FAFlowID, 0) AS FlowId
        FROM   FS_ExchangeOrder eo
               LEFT JOIN FS_ShopFundAccountFlow flow
                      ON ( eo.ExchangeOrderID = flow.ExchangeOrderID
                           AND flow.FlowType = #flowType#
                           AND flow.SourceType = #sourceType# )
        WHERE  eo.ExchangeOrderID = #exchangeOrderId#
        ORDER  BY eo.AddDate DESC,
                  eo.ExchangeOrderID ASC
    </select>

    <select id="findExchangeOrderSummaryDataListByFlowIdList" resultMap="exchangeOrderSummaryData" parameterClass="map">
        SELECT OrderAmount,Status,AddDate,BizCode
        FROM FS_ExchangeOrder
        WHERE exchangeOrderId IN
        (SELECT ExchangeOrderId
        FROM FS_ShopFundAccountFlow
        WHERE FAFlowID IN
        <iterate open="(" close=")" conjunction="," property="flowIdList">
            #flowIdList[]#
        </iterate>
        )
    </select>
</sqlMap>