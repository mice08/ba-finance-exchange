<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ExchangeOrder">

    <typeAlias alias="ExchangeOrder" type="com.dianping.ba.finance.exchange.api.datas.ExchangeOrderData"/>
    <resultMap id="exchangeOrder" class="ExchangeOrder">
        <result property="exchangeOrderId" column="ExchangeOrderID"/>
        <result property="orderAmount" column="OrderAmount"/>
        <result property="orderType" column="OrderType"/>
        <result property="bankAccountNo" column="BankAccountNo"/>
        <result property="bankAccountName" column="BankAccountName"/>
        <result property="bankName" column="BankName"/>
        <result property="status" column="Status"/>
        <result property="addDate" column="AddDate"/>
        <result property="orderDate" column="OrderDate"/>
        <result property="lastUpdateDate" column="LastUpdateDate"/>
        <result property="memo" column="Memo"/>
    </resultMap>

    <typeAlias alias="ExchangeOrderDisplayData" type="com.dianping.ba.finance.exchange.api.datas.ExchangeOrderDisplayData"/>
    <resultMap id="exchangeOrderDisplayData" class="ExchangeOrderDisplayData">
        <result property="exchangeOrderId" column="ExchangeOrderID"/>
        <result property="customerGlobalId" column="CustomerGlobalId"/>
        <result property="companyGlobalId" column="CompanyGlobalId"/>
        <result property="shopId" column="ShopId"/>
        <result property="orderAmount" column="OrderAmount"/>
        <result property="bankAccountNo" column="BankAccountNo"/>
        <result property="bankAccountName" column="BankAccountName"/>
        <result property="bankName" column="BankName"/>
        <result property="status" column="Status"/>
        <result property="memo" column="Memo"/>
        <result property="orderDate" column="OrderDate"/>
    </resultMap>

    <insert id="insertExchangeOrder" parameterClass="map">
        <![CDATA[
        	 insert into FS_ExchangeOrder
		            (OrderAmount,
		             OrderType,
		             BankAccountNo,
		             BankAccountName,
		             BankName,
		             AddDate,
		             LastUpdateDate,
		             Memo
		             )
			values (#exchangeOrderData.orderAmount#,
			         #exchangeOrderData.orderType#,
			         #exchangeOrderData.bankAccountNo#,
			         #exchangeOrderData.bankAccountName#,
			         #exchangeOrderData.bankName#,
			         NOW(),
			         NOW(),
			         #exchangeOrderData.memo#
			        );
 		]]>
        <selectKey resultClass="java.lang.Integer" keyProperty="exchangeOrderId">
            <![CDATA[
			SELECT @@IDENTITY AS id
		]]>
        </selectKey>
    </insert>

    <update id="updateExchangeOrderData" parameterClass="map">
        UPDATE FS_ExchangeOrder
        SET Status = #status#,
        <isNotEmpty property="orderDate">
            OrderDate = #orderDate#,
        </isNotEmpty>
        LastUpdateDate = now()
        WHERE ExchangeOrderID = #exchangeOrderId# AND Status != #status#
    </update>

    <select id="loadExchangeOrderByOrderId" parameterClass="map" resultMap="exchangeOrder">
        <![CDATA[
        select ExchangeOrderID,OrderAmount,OrderType,BankAccountNo,BankAccountName,BankName,Status,OrderDate,AddDate,LastUpdateDate,Memo
        from FS_ExchangeOrder
        where ExchangeOrderID = #exchangeOrderId#
        ]]>
    </select>

    <select id="paginateExchangeOrderList" resultMap="exchangeOrderDisplayData" parameterClass="map">
        SELECT
        eo.ExchangeOrderID,
        sa.CustomerGlobalID,
        sa.CompanyGlobalID,
        sa.ShopID,
        eo.OrderAmount,
        eo.BankAccountNo,
        eo.BankAccountName,
        eo.BankName,
        eo.Status,
        eo.Memo,
        IFNULL(eo.OrderDate, "")
        FROM
        FS_ExchangeOrder eo,
        FS_ShopFundAccountFlow flow,
        FS_ShopFundAccount sa
        WHERE
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FAID = sa.FAID
        AND eo.OrderDate &lt;= NOW()
        <isGreaterThan property="searchBean.exchangeOrderId" compareValue="0" prepend="and">
            eo.ExchangeOrderID = #orderId#
        </isGreaterThan>
        <isNotNull property="searchBean.beginDate" prepend="and">
            eo.OrderDate &gt;= #searchBean.beginDate#
        </isNotNull>
        <isNotNull property="searchBean.endDate" prepend="and">
            eo.OrderDate &lt;= #searchBean.endDate#
        </isNotNull>
        <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
            eo.Status = #searchBean.status#
        </isGreaterThan>
        GROUP BY
        eo.ExchangeOrderID,
        sa.CustomerGlobalID,
        sa.CompanyGlobalID,
        sa.ShopID,
        eo.OrderAmount,
        eo.BankAccountNo,
        eo.BankAccountName,
        eo.BankName,
        eo.Status,
        eo.Memo,
        eo.OrderDate
        ORDER BY eo.ExchangeOrderID
    </select>

    <select id="paginateExchangeOrderList_COUNT" resultClass="int" parameterClass="map">
        SELECT COUNT(eo.ExchangeOrderID)
        FROM
        FS_ExchangeOrder eo,
        FS_ShopFundAccountFlow flow,
        FS_ShopFundAccount sa
        WHERE
        eo.ExchangeOrderID = flow.ExchangeOrderID
        AND flow.FAID = sa.FAID
        AND eo.OrderDate &lt;= NOW()
        <isGreaterThan property="searchBean.exchangeOrderId" compareValue="0" prepend="and">
            eo.ExchangeOrderID = #orderId#
        </isGreaterThan>
        <isNotNull property="searchBean.beginDate" prepend="and">
            eo.OrderDate &gt;= #searchBean.beginDate#
        </isNotNull>
        <isNotNull property="searchBean.endDate" prepend="and">
            eo.OrderDate &lt;= #searchBean.endDate#
        </isNotNull>
        <isGreaterThan property="searchBean.status" compareValue="0" prepend="and">
            eo.Status = #searchBean.status#
        </isGreaterThan>
        GROUP BY
        eo.ExchangeOrderID,
        sa.CustomerGlobalID,
        sa.CompanyGlobalID,
        sa.ShopID,
        eo.OrderAmount,
        eo.BankAccountNo,
        eo.BankAccountName,
        eo.BankName,
        eo.Status,
        eo.Memo,
        eo.OrderDate
        ORDER BY eo.ExchangeOrderID
    </select>
</sqlMap>