<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PayOrder">

    <typeAlias alias="PayOrderData" type="com.dianping.ba.finance.exchange.api.datas.PayOrderData"/>
    <resultMap id="payOrderData" class="PayOrderData">
        <result property="poId" column="POID"/>
        <result property="customerId" column="CustomerID"/>
        <result property="payAmount" column="PayAmount"/>
        <result property="paidDate" column="PaidDate"/>
        <result property="paySequence" column="PaySequence"/>
        <result property="payCode" column="PayCode"/>
        <result property="customerId" column="CustomerID"/>
        <result property="payeeName" column="PayeeName"/>
        <result property="customerBankId" column="CustomerBankID"/>
        <result property="businessType" column="BusinessType"/>
        <result property="payType" column="PayType"/>
        <result property="bankAccountNo" column="BankAccountNo"/>
        <result property="bankAccountName" column="BankAccountName"/>
        <result property="bankName" column="BankName"/>
        <result property="bankProvince" column="BankProvince"/>
        <result property="bankCity" column="BankCity"/>
        <result property="bankBranchName" column="BankBranchName"/>
        <result property="bankFullBranchName" column="BankFullBranchName"/>
        <result property="bankCode" column="BankCode"/>
        <result property="masterBankCode" column="MasterBankCode"/>
        <result property="bankAccountType" column="BankAccountType"/>
        <result property="payBankName" column="PayBankName"/>
        <result property="payBankAccountNo" column="PayBankAccountNo"/>
        <result property="status" column="Status"/>
        <result property="addTime" column="AddTime"/>
        <result property="addType" column="AddType"/>
        <result property="updateTime" column="UpdateTime"/>
        <result property="memo" column="Memo"/>
        <result property="payeeBankAccountId" column="PayeeBankAccountID"/>
    </resultMap>

    <insert id="insertPayOrder" parameterClass="map">
        <![CDATA[
        INSERT INTO FC_PayOrder
			(PayAmount,
			PaySequence,
			CustomerID,
			PayeeName,
			CustomerBankID,
			BankAccountNo,
			BankAccountName,
			BankBranchName,
			BankName,
			BankProvince,
			BankCity,
			BankFullBranchName,
			BankCode,
			MasterBankCode,
			BankAccountType,
			BusinessType,
			PayType,
			PayBankName,
			PayBankAccountNo,
			PayeeBankAccountID,
			Status,
			AddTime,
			AddType,
			UpdateTime,
			Memo,
			AddLoginID,
			UpdateLoginID
			)
			values (
			#payOrderData.payAmount#,
			#payOrderData.paySequence#,
			#payOrderData.customerId#,
			#payOrderData.payeeName#,
			#payOrderData.customerBankId#,
			#payOrderData.bankAccountNo#,
			#payOrderData.bankAccountName#,
			#payOrderData.bankBranchName#,
			#payOrderData.bankName#,
			#payOrderData.bankProvince#,
			#payOrderData.bankCity#,
			#payOrderData.bankFullBranchName#,
			#payOrderData.bankCode#,
			#payOrderData.masterBankCode#,
			#payOrderData.bankAccountType#,
			#payOrderData.businessType#,
			#payOrderData.payType#,
			#payOrderData.payBankName#,
			#payOrderData.payBankAccountNo#,
			#payOrderData.payeeBankAccountId#,
			#payOrderData.status#,
			NOW(),
			#payOrderData.addType#,
			NOW(),
			#payOrderData.memo#,
			#payOrderData.addLoginId#,
			#payOrderData.updateLoginId#)
 		]]>
        <selectKey resultClass="java.lang.Integer" keyProperty="poId">
            <![CDATA[
			SELECT @@IDENTITY AS id
		]]>
        </selectKey>
    </insert>

    <update id="updatePayOrders" parameterClass="map">
        UPDATE FC_PayOrder
        SET Status = #updateInfoBean.updateStatus#,
        <isNotNull property="updateInfoBean.paidDate">
            PaidDate = #updateInfoBean.paidDate#,
        </isNotNull>
        <isNotNull property="updateInfoBean.memo">
            Memo = CONCAT(IFNULL(Memo, ""), ";", #updateInfoBean.memo#),
        </isNotNull>
        UpdateTime = now(),
        UpdateLoginID = #updateInfoBean.loginId#
        WHERE Status = #updateInfoBean.preStatus#
        <isNotEmpty prepend="and" property="updateInfoBean.poIdList">
            POID IN
            <iterate open="(" close=")" conjunction="," property="updateInfoBean.poIdList">
                #updateInfoBean.poIdList[]#
            </iterate>
        </isNotEmpty>
    </update>

    <select id="findPayOrderListByPoIdList" resultMap="payOrderData" parameterClass="map">
        SELECT
        POID,
        PayAmount,
        PaySequence,
        PayCode,
        CustomerID,
        PayeeName,
        CustomerBankId,
        BankAccountNo,
        BankAccountName,
        PaidDate,
        BankBranchName,
        BankName,
        BankProvince,
        BankCity,
        BankFullBranchName,
        BankCode,
        MasterBankCode,
        BankAccountType,
        BusinessType,
        PayType,
        PayBankName,
        PayBankAccountNo,
        PayeeBankAccountID,
        Status,
        AddTime,
        AddType,
        UpdateTime,
        Memo,
        CustomerID
        FROM FC_PayOrder
        WHERE POID IN
        <iterate open="(" close=")" conjunction="," property="poIds">
            #poIds[]#
        </iterate>
        AND Status != 6
    </select>

    <select id="paginatePayOrderList" resultMap="payOrderData" parameterClass="map">
        SELECT
        POID,
        PayAmount,
        PaySequence,
        PayCode,
        CustomerID,
        PayeeName,
        CustomerBankId,
        BankAccountNo,
        BankAccountName,
        PaidDate,
        BankBranchName,
        BankName,
        BankProvince,
        BankCity,
        BankFullBranchName,
        BankCode,
        MasterBankCode,
        BankAccountType,
        BusinessType,
        PayType,
        PayBankName,
        PayBankAccountNo,
        PayeeBankAccountID,
        Status,
        AddTime,
        AddType,
        UpdateTime,
        Memo
        FROM
        FC_PayOrder
        WHERE Status != 6
        <dynamic prepend="AND">
            <isNotEmpty property="payOrderSearchBean.poIdList" prepend="and">
                POID IN
                <iterate open="(" close=")" conjunction="," property="payOrderSearchBean.poIdList">
                    #payOrderSearchBean.poIdList[]#
                </iterate>
            </isNotEmpty>
            <isNotNull property="payOrderSearchBean.beginTime" prepend="and">
                AddTime &gt;= #payOrderSearchBean.beginTime#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endTime" prepend="and">
                AddTime &lt;= #payOrderSearchBean.endTime#
            </isNotNull>
            <isGreaterThan property="payOrderSearchBean.status" compareValue="0" prepend="and">
                Status = #payOrderSearchBean.status#
            </isGreaterThan>
            <isGreaterThan property="payOrderSearchBean.businessType" prepend="and" compareValue="0">
                BusinessType = #payOrderSearchBean.businessType#
            </isGreaterThan>
            <isNotNull property="payOrderSearchBean.startAmount" prepend="and">
                PayAmount &gt;= #payOrderSearchBean.startAmount#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endAmount" prepend="and">
                PayAmount &lt;= #payOrderSearchBean.endAmount#
            </isNotNull>
        </dynamic>
        ORDER BY
        AddTime DESC,
        POID ASC
    </select>

    <select id="paginatePayOrderList_COUNT" resultClass="int" parameterClass="map">
        SELECT
        COUNT(1)
        FROM
        FC_PayOrder
        WHERE Status != 6
        <dynamic prepend="AND">
            <isNotEmpty property="payOrderSearchBean.poIdList" prepend="and">
                POID IN
                <iterate open="(" close=")" conjunction="," property="payOrderSearchBean.poIdList">
                    #payOrderSearchBean.poIdList[]#
                </iterate>
            </isNotEmpty>
            <isNotNull property="payOrderSearchBean.beginTime" prepend="and">
                AddTime &gt;= #payOrderSearchBean.beginTime#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endTime" prepend="and">
                AddTime &lt;= #payOrderSearchBean.endTime#
            </isNotNull>
            <isGreaterThan property="payOrderSearchBean.status" compareValue="0" prepend="and">
                Status = #payOrderSearchBean.status#
            </isGreaterThan>
            <isGreaterThan property="payOrderSearchBean.businessType" prepend="and" compareValue="0">
                BusinessType = #payOrderSearchBean.businessType#
            </isGreaterThan>
            <isNotNull property="payOrderSearchBean.startAmount" prepend="and">
                PayAmount &gt;= #payOrderSearchBean.startAmount#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endAmount" prepend="and">
                PayAmount &lt;= #payOrderSearchBean.endAmount#
            </isNotNull>
        </dynamic>
    </select>

    <select id="findPayOrderTotalAmountByCondition" resultClass="java.math.BigDecimal" parameterClass="map">
        SELECT
        IFNULL(SUM(PayAmount), 0) AS totalAmount
        FROM
        FC_PayOrder
        WHERE
        Status != 6
        <dynamic prepend="AND">
            <isNotEmpty property="payOrderSearchBean.poIdList" prepend="and">
                POID IN
                <iterate open="(" close=")" conjunction="," property="payOrderSearchBean.poIdList">
                    #payOrderSearchBean.poIdList[]#
                </iterate>
            </isNotEmpty>
            <isNotNull property="payOrderSearchBean.beginTime" prepend="and">
                AddTime &gt;= #payOrderSearchBean.beginTime#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endTime" prepend="and">
                AddTime &lt;= #payOrderSearchBean.endTime#
            </isNotNull>
            <isGreaterThan property="payOrderSearchBean.status" compareValue="0" prepend="and">
                Status = #payOrderSearchBean.status#
            </isGreaterThan>
            <isGreaterThan property="payOrderSearchBean.businessType" prepend="and" compareValue="0">
                BusinessType = #payOrderSearchBean.businessType#
            </isGreaterThan>
            <isNotNull property="payOrderSearchBean.startAmount" prepend="and">
                PayAmount &gt;= #payOrderSearchBean.startAmount#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endAmount" prepend="and">
                PayAmount &lt;= #payOrderSearchBean.endAmount#
            </isNotNull>
        </dynamic>
    </select>

    <select id="findPayOrderList" resultMap="payOrderData" parameterClass="map">
        SELECT
        POID,
        PayAmount,
        PaySequence,
        PayCode,
        CustomerID,
        PayeeName,
        CustomerBankId,
        BankAccountNo,
        BankAccountName,
        PaidDate,
        BankBranchName,
        BankName,
        BankProvince,
        BankCity,
        BankFullBranchName,
        BankCode,
        MasterBankCode,
        BankAccountType,
        BusinessType,
        PayType,
        PayBankName,
        PayBankAccountNo,
        PayeeBankAccountID,
        Status,
        AddTime,
        AddType,
        UpdateTime,
        Memo
        FROM FC_PayOrder
        WHERE Status != 6
        <dynamic prepend="AND">
            <isNotEmpty property="payOrderSearchBean.poIdList" prepend="and">
                POID IN
                <iterate open="(" close=")" conjunction="," property="payOrderSearchBean.poIdList">
                    #payOrderSearchBean.poIdList[]#
                </iterate>
            </isNotEmpty>
            <isNotNull property="payOrderSearchBean.beginTime" prepend="and">
                AddTime &gt;= #payOrderSearchBean.beginTime#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endTime" prepend="and">
                AddTime &lt;= #payOrderSearchBean.endTime#
            </isNotNull>
            <isGreaterThan property="payOrderSearchBean.status" compareValue="0" prepend="and">
                Status = #payOrderSearchBean.status#
            </isGreaterThan>
            <isGreaterThan property="payOrderSearchBean.businessType" prepend="and" compareValue="0">
                BusinessType = #payOrderSearchBean.businessType#
            </isGreaterThan>
            <isNotNull property="payOrderSearchBean.startAmount" prepend="and">
                PayAmount &gt;= #payOrderSearchBean.startAmount#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endAmount" prepend="and">
                PayAmount &lt;= #payOrderSearchBean.endAmount#
            </isNotNull>
        </dynamic>
    </select>


    <select id="findPayOrderIdList" resultClass="java.lang.Integer" parameterClass="map">
        SELECT
        POID
        FROM FC_PayOrder
        WHERE Status != 6
        <dynamic prepend="AND">
            <isNotEmpty property="payOrderSearchBean.poIdList" prepend="and">
                POID IN
                <iterate open="(" close=")" conjunction="," property="payOrderSearchBean.poIdList">
                    #payOrderSearchBean.poIdList[]#
                </iterate>
            </isNotEmpty>
            <isNotNull property="payOrderSearchBean.beginTime" prepend="and">
                AddTime &gt;= #payOrderSearchBean.beginTime#
            </isNotNull>
            <isNotNull property="payOrderSearchBean.endTime" prepend="and">
                AddTime &lt;= #payOrderSearchBean.endTime#
            </isNotNull>
            <isGreaterThan property="payOrderSearchBean.status" compareValue="0" prepend="and">
                Status = #payOrderSearchBean.status#
            </isGreaterThan>
            <isGreaterThan property="payOrderSearchBean.businessType" prepend="and" compareValue="0">
                BusinessType = #payOrderSearchBean.businessType#
            </isGreaterThan>
        </dynamic>
    </select>

    <select id="loadPayOrderByPaySequence" resultMap="payOrderData" parameterClass="map">
        SELECT POID,
               PayAmount,
               PaySequence,
               PayCode,
               CustomerID,
               PayeeName,
               CustomerBankId,
               BankAccountNo,
               BankAccountName,
               PaidDate,
               BankBranchName,
               BankName,
               BankProvince,
               BankCity,
               BankFullBranchName,
               BankCode,
               MasterBankCode,
               BankAccountType,
               BusinessType,
               PayType,
               PayBankName,
               PayBankAccountNo,
               PayeeBankAccountID,
               Status,
               AddTime,
               AddType,
               UpdateTime,
               Memo
        FROM   FC_PayOrder po
        WHERE  po.PaySequence = #paySequence#
        AND Status != 6
    </select>

    <update id="updateCustomerId" parameterClass="map">
        UPDATE FC_PayOrder
        SET CustomerId = #newCustomerId#
        WHERE
        CustomerId = #oldCustomerId#
        AND BusinessType in (1, 6)
        AND Status != 6
    </update>

    <update id="updatePayOrderStatus" parameterClass="map">
        UPDATE FC_PayOrder
        SET Status = #postStatus#, Memo = #memo#
        WHERE POID = #poId# and Status = #preStatus#
    </update>

    <select id="loadPayOrderByPayPOID" resultMap="payOrderData" parameterClass="map">
        SELECT POID,
        PayAmount,
        PaySequence,
        PayCode,
        CustomerID,
        PayeeName,
        CustomerBankId,
        BankAccountNo,
        BankAccountName,
        PaidDate,
        BankBranchName,
        BankName,
        BankProvince,
        BankCity,
        BankFullBranchName,
        BankCode,
        MasterBankCode,
        BankAccountType,
        BusinessType,
        PayType,
        PayBankName,
        PayBankAccountNo,
        PayeeBankAccountID,
        Status,
        AddTime,
        AddType,
        UpdateTime,
        Memo
        FROM   FC_PayOrder po
        WHERE  po.POID = #poId#
    </select>

    <update id="updatePayOrderListStatus" parameterClass="map">
        UPDATE FC_PayOrder
        SET Status = #postStatus#, UpdateLoginID = #loginId#
        WHERE POID = #poId# AND Status IN
        <iterate open="(" close=")" conjunction="," property="preStatusList">
            #preStatusList[]#
        </iterate>
    </update>



</sqlMap>