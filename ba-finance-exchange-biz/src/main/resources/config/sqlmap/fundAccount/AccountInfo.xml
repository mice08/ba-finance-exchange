<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ShopFundAccountInfo">

    <typeAlias alias="ShopFundAccountInfoData" type="com.dianping.ba.finance.exchange.api.datas.ShopFundAccountInfoData"/>
    <resultMap id="ShopFundAccountInfo" class="ShopFundAccountInfoData">
        <result property="receiveDate" column="ReceiveDate"/>
        <result property="amount" column="Amount"/>
        <result property="shopId" column="ShopID"/>
        <result property="contractNo" column="ContractNo"/>
        <result property="payType" column="PayType"/>
        <result property="tradeType" column="TradeType"/>
        <result property="resourceType" column="ResourceType"/>
        <result property="isPositive" column="IsPositive"/>
    </resultMap>
    
    <typeAlias alias="ShopFundAccountBean" type="com.dianping.ba.finance.exchange.api.datas.ShopFundAccountData"/>
    <resultMap id="ShopFundAccountBean" class="ShopFundAccountBean">
        <result property="fundAccountId" column="FundAccountID"/>
        <result property="shopId" column="ShopID"/>
        <result property="accountType" column="AccountType"/>
        <result property="credit" column="Credit"/>
        <result property="debit" column="Debit"/>
        <result property="balance" column="Balance"/>
        <result property="addDate" column="AddDate"/>
        <result property="updateDate" column="UpdateDate"/>
    </resultMap>

    <select id="paginateAccountInfoList" resultMap="ShopFundAccountInfo" parameterClass="map">
        SELECT * FROM(
        SELECT IsPositive,aa.ShopID AS ShopID,ro.ContractNo AS ContractNo,ra.ReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,ra.PayType ,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN JS_ReceiveOrder ro ON aa.ResourceID = ro.ReceiveOrderID
        JOIN JS_ReceiveAudit ra ON ra.ReceiveOrderID = ro.ReceiveOrderID AND aa.TradeType=ra.ReceiveType
        WHERE aa.ResourceType=2 AND aa.AccountType=2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="payType" compareValue="0">
            ra.PayType = #payType#
        </isGreaterThan>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            ra.ReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            ra.ReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>
        UNION ALL
        SELECT IsPositive,aa.ShopID AS ShopID,arb.ContractNo AS ContractNo,ar.PlanReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,0 AS PayType,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN YS_AccountReceivable ar ON aa.ResourceID = ar.ARID
        JOIN  YS_ARForBooking arb ON arb.ARID=ar.ARID AND arb.ARType = aa.TradeType
        WHERE aa.ResourceType = 1 AND aa.AccountType = 2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            PlanReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            PlanReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>) AS Total
        ORDER BY ReceiveDate DESC
    </select>

    <select id="paginateAccountInfoList_COUNT" resultClass="int" parameterClass="map">
        SELECT COUNT(1)
        FROM(
        SELECT IsPositive,aa.ShopID AS ShopID,ro.ContractNo AS ContractNo,ra.ReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,ra.PayType ,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN JS_ReceiveOrder ro ON aa.ResourceID = ro.ReceiveOrderID
        JOIN JS_ReceiveAudit ra ON ra.ReceiveOrderID = ro.ReceiveOrderID AND aa.TradeType=ra.ReceiveType
        WHERE aa.ResourceType=2 AND aa.AccountType=2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="payType" compareValue="0">
            ra.PayType = #payType#
        </isGreaterThan>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            ra.ReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            ra.ReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>
        UNION ALL
        SELECT IsPositive,aa.ShopID AS ShopID,arb.ContractNo AS ContractNo,ar.PlanReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,0 AS PayType,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN YS_AccountReceivable ar ON aa.ResourceID = ar.ARID
        JOIN  YS_ARForBooking arb ON arb.ARID=ar.ARID AND arb.ARType = aa.TradeType
        WHERE aa.ResourceType = 1 AND aa.AccountType = 2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            PlanReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            PlanReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>) AS Total
    </select>

    <select id="findAccountInfoList" resultMap="ShopFundAccountInfo" parameterClass="map">
        SELECT * FROM(
        SELECT IsPositive,aa.ShopID AS ShopID,ro.ContractNo AS ContractNo,ra.ReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,ra.PayType ,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN JS_ReceiveOrder ro ON aa.ResourceID = ro.ReceiveOrderID
        JOIN JS_ReceiveAudit ra ON ra.ReceiveOrderID = ro.ReceiveOrderID AND aa.TradeType=ra.ReceiveType
        WHERE aa.ResourceType=2 AND aa.AccountType=2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="payType" compareValue="0">
            ra.PayType = #payType#
        </isGreaterThan>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            ra.ReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            ra.ReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>
        UNION ALL
        SELECT IsPositive,aa.ShopID AS ShopID,arb.ContractNo AS ContractNo,ar.PlanReceiveDate AS ReceiveDate,aa.Amount AS Amount,aa.TradeType,0 AS PayType,aa.AddDate AS AddDate,aa.ResourceType as ResourceType
        FROM ZH_ShopFundAccountAudit aa
        JOIN YS_AccountReceivable ar ON aa.ResourceID = ar.ARID
        JOIN  YS_ARForBooking arb ON arb.ARID=ar.ARID AND arb.ARType = aa.TradeType
        WHERE aa.ResourceType = 1 AND aa.AccountType = 2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            PlanReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            PlanReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>) AS Total
        ORDER BY ReceiveDate DESC
    </select>

    <select id="findAccountSumAmount" resultClass="decimal" parameterClass="map">
        SELECT SUM(Total.amount)
        FROM(
        SELECT
        CASE
        WHEN aa.IsPositive=0 THEN -aa.Amount
        WHEN aa.IsPositive=1 THEN aa.Amount
        END AS amount
        FROM ZH_ShopFundAccountAudit aa
        JOIN JS_ReceiveOrder ro ON aa.ResourceID = ro.ReceiveOrderID
        JOIN JS_ReceiveAudit ra ON ra.ReceiveOrderID = ro.ReceiveOrderID AND aa.TradeType=ra.ReceiveType
        WHERE aa.ResourceType=2 AND aa.AccountType=2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="payType" compareValue="0">
            ra.PayType = #payType#
        </isGreaterThan>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            ra.ReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            ra.ReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>
        UNION ALL
        SELECT
        CASE
        WHEN aa.IsPositive=0 THEN -aa.Amount
        WHEN aa.IsPositive=1 THEN aa.Amount
        END AS amount
        FROM ZH_ShopFundAccountAudit aa
        JOIN YS_AccountReceivable ar ON aa.ResourceID = ar.ARID
        JOIN  YS_ARForBooking arb ON arb.ARID=ar.ARID AND arb.ARType = aa.TradeType
        WHERE aa.ResourceType = 1 AND aa.AccountType = 2
        <isNotEmpty prepend="and" property="shopIdList">
            aa.ShopId IN
            <iterate open="(" close=")" conjunction="," property="shopIdList">
                #shopIdList[]#
            </iterate>
        </isNotEmpty>
        <isNotEmpty prepend="and" property="shopId">
            aa.ShopId = #shopId#
        </isNotEmpty>
        <isGreaterThan prepend="and" property="tradeType" compareValue="-1">
            TradeType = #tradeType#
        </isGreaterThan>
        <isNotNull property="receiveDateBegin" prepend="and">
            PlanReceiveDate  &gt;= #receiveDateBegin#
        </isNotNull>
        <isNotNull property="receiveDateEnd"  prepend="and">
            PlanReceiveDate &lt;= #receiveDateEnd#
        </isNotNull>
        <isNotNull property="addDateBegin" prepend="and">
            AddDate &gt;= #addDateBegin#
        </isNotNull>
        <isNotNull property="addDateEnd"  prepend="and">
            AddDate &lt;= #addDateEnd#
        </isNotNull>) AS Total
    </select>

    <update id="updateShopFundAccountBalance" parameterClass="map">
        <![CDATA[
        	UPDATE ZH_ShopFundAccount
			SET Credit = #shopFundAccountBean.credit#,
			Debit = #shopFundAccountBean.debit#,
			Balance = #shopFundAccountBean.balance#,
			UpdateDate = NOW()
        WHERE FundAccountID  = #shopFundAccountBean.fundAccountId#
 		]]>
    </update>

    <select id="getShopFundAccount" resultMap="ShopFundAccountBean" parameterClass="map">
        SELECT FundAccountID,ShopID,AccountType,Credit,Debit,Balance,AddDate,UpdateDate
        FROM
        ZH_ShopFundAccount
        WHERE AccountType = #accountType# and
        ShopID = #shopId#
        limit 1
    </select>

    <insert id="insertShopFundAccount" parameterClass="map">
        <![CDATA[
        	INSERT INTO ZH_ShopFundAccount
			(ShopID,AccountType,Credit,Debit,Balance,AddDate,UpdateDate)
			VALUES
			(#shopFundAccountBean.shopId#,
			#shopFundAccountBean.accountType#,
			#shopFundAccountBean.credit#,
			#shopFundAccountBean.debit#,
			#shopFundAccountBean.balance#,
			NOW(),
			NOW()
			);
 		]]>
        <selectKey resultClass="java.lang.Integer" keyProperty="FundAccountID">
            <![CDATA[
			SELECT @@IDENTITY AS id
		]]>
        </selectKey>
    </insert>

    <insert id="insertShopFundAccountAudit" parameterClass="map">
        <![CDATA[
        	INSERT INTO ZH_ShopFundAccountAudit
			(FundAccountID,ShopID,AccountType,Amount,TradeType,IsPositive,AddDate,Memo,ResourceType,ResourceID)
			VALUES
			(#shopFundAccountAuditBean.fundAccountId#,
			#shopFundAccountAuditBean.shopId#,
			#shopFundAccountAuditBean.accountType#,
			#shopFundAccountAuditBean.amount#,
			#shopFundAccountAuditBean.tradeType#,
			#shopFundAccountAuditBean.isPositive#,
			NOW(),
			#shopFundAccountAuditBean.memo#,
			#shopFundAccountAuditBean.resourceType#,
			#shopFundAccountAuditBean.resourceId#
			);
 		]]>
        <selectKey resultClass="java.lang.Integer" keyProperty="AccountAuditID">
            <![CDATA[
			SELECT @@IDENTITY AS id
		]]>
        </selectKey>
    </insert>

</sqlMap>